[{"C:\\workspace\\star-wars-app\\src\\serviceWorker.js":"1","C:\\workspace\\star-wars-app\\src\\index.tsx":"2","C:\\workspace\\star-wars-app\\src\\App.tsx":"3","C:\\workspace\\star-wars-app\\src\\store.ts":"4","C:\\workspace\\star-wars-app\\src\\components\\People\\index.tsx":"5","C:\\workspace\\star-wars-app\\src\\components\\Person\\index.tsx":"6","C:\\workspace\\star-wars-app\\src\\components\\People\\people.reducer.ts":"7","C:\\workspace\\star-wars-app\\src\\components\\Person\\person.reducer.ts":"8","C:\\workspace\\star-wars-app\\src\\components\\person\\person.reducer.ts":"9","C:\\workspace\\star-wars-app\\src\\components\\people\\people.reducer.ts":"10","C:\\workspace\\star-wars-app\\src\\components\\people\\index.tsx":"11","C:\\workspace\\star-wars-app\\src\\components\\person\\index.tsx":"12","C:\\workspace\\star-wars-app\\src\\components\\Film\\index.tsx":"13","C:\\workspace\\star-wars-app\\src\\components\\Film\\film.reducer.ts":"14"},{"size":5141,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":619,"mtime":1611561680262,"results":"17","hashOfConfig":"16"},{"size":353,"mtime":1611562143631,"results":"18","hashOfConfig":"16"},{"size":442,"mtime":1611626510913,"results":"19","hashOfConfig":"16"},{"size":2202,"mtime":1611623027850,"results":"20","hashOfConfig":"16"},{"size":1190,"mtime":1611623556453,"results":"21","hashOfConfig":"16"},{"size":1415,"mtime":1611626607811,"results":"22","hashOfConfig":"16"},{"size":645,"mtime":1611579204083,"results":"23","hashOfConfig":"16"},{"size":836,"mtime":1611553107803,"results":"24","hashOfConfig":"16"},{"size":523,"mtime":1611552325373,"results":"25","hashOfConfig":"16"},{"size":2536,"mtime":1611562143647,"results":"26","hashOfConfig":"16"},{"size":1714,"mtime":1611561302096,"results":"27","hashOfConfig":"16"},{"size":1309,"mtime":1611624117546,"results":"28","hashOfConfig":"16"},{"size":1140,"mtime":1611629272376,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"12acz8b",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},"C:\\workspace\\star-wars-app\\src\\serviceWorker.js",[],["66","67"],"C:\\workspace\\star-wars-app\\src\\index.tsx",[],["68","69"],"C:\\workspace\\star-wars-app\\src\\App.tsx",["70","71"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport People from './components/People';\nimport Person from './components/Person';\n\nfunction App() {\n    return (\n        <div className='App'>\n            <h2>Table with list of people</h2>\n            <People />\n            <Person />\n        </div>\n    );\n}\n\nexport default App;\n","C:\\workspace\\star-wars-app\\src\\store.ts",[],"C:\\workspace\\star-wars-app\\src\\components\\People\\index.tsx",["72","73","74","75"],"import './styles.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { getPeopleList } from './people.reducer';\r\nimport { update } from '../Person/person.reducer';\r\nimport { PersonProps } from '../Person';\r\n\r\nexport interface PeopleProps {\r\n    status: string;\r\n    count: number;\r\n    next?: string;\r\n    previous?: string;\r\n    results: Array<PersonProps>;\r\n}\r\n\r\nfunction People(props: any) {\r\n    const people: PeopleProps = useSelector((store: any) => {\r\n        return store.people;\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPeopleList());\r\n    }, []);\r\n\r\n    return (\r\n        <table className='people'>\r\n            <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Height</th>\r\n                <th>Mass</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {people.results.map((person: any, indexId: any) => {\r\n                return (\r\n                    <tr key={indexId} onClick={() => {\r\n                        dispatch(update(person));\r\n                    }}>\r\n                        <td>{person.name}</td>\r\n                        <td>{person.height}</td>\r\n                        <td>{person.mass}</td>\r\n                    </tr>\r\n                );\r\n            })\r\n            }\r\n            </tbody>\r\n            <tfoot>\r\n            <tr>\r\n                <td colSpan={3}>\r\n                    { people.status }\r\n                    { ' ' }\r\n                    Pagination: { ' ' }\r\n                    {people.previous &&\r\n                    <a href={'#'} onClick={() => {\r\n                        dispatch(getPeopleList(people.previous));\r\n                    }}>Back</a>\r\n                    }\r\n                    { ' ' }\r\n                    {people.next &&\r\n                    <a href={'#'} onClick={() => {\r\n                        // getPeople(people.next)\r\n                        dispatch(getPeopleList(people.next));\r\n                    }}>Next</a>\r\n                    }\r\n                </td>\r\n            </tr>\r\n            </tfoot>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default People;\r\n","C:\\workspace\\star-wars-app\\src\\components\\Person\\index.tsx",["76","77","78"],"import './styles.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Film, {FilmProps, FilmsProps} from \"../Film\";\r\n\r\nexport interface PersonProps {\r\n    name: string;\r\n    height: string;\r\n    mass: string;\r\n    url: string;\r\n    birth_year: string,\r\n    gender: string;\r\n    films: Array<string>;\r\n    filmArray?: Array<FilmProps>;\r\n}\r\n\r\nfunction Person(props: any) {\r\n    const person: PersonProps = useSelector((store: any) => {\r\n        return store.person;\r\n    });\r\n\r\n    const films: FilmsProps = useSelector((store: any) => {\r\n        return store.films;\r\n    });\r\n\r\n    return (\r\n        <div className={'person-details'}>\r\n            <h3>Details Section</h3>\r\n            <div>Name: {person.name}</div>\r\n            <div>Birth year: {person.birth_year}</div>\r\n            <div>Gender: {person.gender}</div>\r\n            <div>List of films:</div>\r\n            <ul>\r\n                {person.films.map((url: string, indexId: any) => {\r\n                    return <Film key={indexId} indexId={indexId} url={url}/>;\r\n                })\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Person;\r\n","C:\\workspace\\star-wars-app\\src\\components\\People\\people.reducer.ts",[],"C:\\workspace\\star-wars-app\\src\\components\\Person\\person.reducer.ts",[],"C:\\workspace\\star-wars-app\\src\\components\\person\\person.reducer.ts",[],"C:\\workspace\\star-wars-app\\src\\components\\people\\people.reducer.ts",[],"C:\\workspace\\star-wars-app\\src\\components\\people\\index.tsx",["79","80","81","82"],"C:\\workspace\\star-wars-app\\src\\components\\person\\index.tsx",["83","84"],"C:\\workspace\\star-wars-app\\src\\components\\Film\\index.tsx",["85","86","87"],"import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addToList, removeFromList, resetList} from './film.reducer';\r\n\r\nexport interface FilmProps {\r\n    title: string;\r\n}\r\n\r\nexport interface FilmsProps  {\r\n    [key: number]: FilmProps\r\n}\r\n\r\nfunction Film(props: any) {\r\n    const [film, setFilm] = useState<FilmProps>({title: 'loading...'});\r\n\r\n    // const film = useSelector((store: any) => {\r\n    //     return store.films[props.indexId] || { title: 'loading...'};\r\n    // });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getFilm = async (url: string) => {\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setFilm(data);\r\n            dispatch(addToList({indexId: props.indexId, data: data}));\r\n        } catch (err: any) {\r\n            console.error('getFilm err : ', err);\r\n        } finally {\r\n            console.log('getFilm finally : ');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFilm(props.url);\r\n        return () => {\r\n            dispatch(removeFromList({indexId: props.indexId}));\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <li className={'film-details'}>\r\n            {film.title}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Film;\r\n",["88","89"],"C:\\workspace\\star-wars-app\\src\\components\\Film\\film.reducer.ts",["90","91"],"import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {FilmProps, FilmsProps} from './index'\r\n\r\nconst initialFilmState: FilmProps = {  title: '' };\r\n\r\nconst initialFilmsState: FilmsProps = {};\r\n\r\nexport const filmsSlice = createSlice({\r\n    name: 'films',\r\n    initialState: initialFilmsState,\r\n    reducers: {\r\n        addToList: (state: any, action) => {\r\n            console.log(\"Film addToList at index ::: \", action.payload.indexId);\r\n            let titleObj: any = {};\r\n            titleObj[action.payload.indexId] = action.payload.data;\r\n            return { ...state, ...titleObj };\r\n        },\r\n        removeFromList: (state: any, action) => {\r\n            console.log(\"Film removeFromList at index ::: \", action.payload.indexId);\r\n            let titleObj: any = {};\r\n            titleObj[action.payload.indexId] = undefined;\r\n            return { ...state, ...titleObj };\r\n        },\r\n        resetList: (state: any, action) => {\r\n            return initialFilmsState;\r\n        }\r\n    },\r\n});\r\n\r\nexport const { addToList, resetList, removeFromList } = filmsSlice.actions;\r\nexport default filmsSlice.reducer;\r\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":24},{"ruleId":"96","severity":1,"message":"100","line":1,"column":26,"nodeType":"98","messageId":"99","endLine":1,"endColumn":35},{"ruleId":"96","severity":1,"message":"97","line":2,"column":16,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"101","severity":1,"message":"102","line":25,"column":8,"nodeType":"103","endLine":25,"endColumn":10,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":57,"column":21,"nodeType":"107","endLine":59,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":63,"column":21,"nodeType":"107","endLine":66,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":2,"column":16,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"96","severity":1,"message":"100","line":2,"column":26,"nodeType":"98","messageId":"99","endLine":2,"endColumn":35},{"ruleId":"96","severity":1,"message":"108","line":22,"column":11,"nodeType":"98","messageId":"99","endLine":22,"endColumn":28},{"ruleId":"96","severity":1,"message":"97","line":2,"column":16,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"101","severity":1,"message":"109","line":39,"column":8,"nodeType":"103","endLine":39,"endColumn":10,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"106","line":69,"column":21,"nodeType":"107","endLine":71,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":75,"column":21,"nodeType":"107","endLine":77,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":2,"column":16,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"101","severity":1,"message":"111","line":42,"column":8,"nodeType":"103","endLine":42,"endColumn":20,"suggestions":"112"},{"ruleId":"96","severity":1,"message":"113","line":2,"column":22,"nodeType":"98","messageId":"99","endLine":2,"endColumn":33},{"ruleId":"96","severity":1,"message":"114","line":3,"column":36,"nodeType":"98","messageId":"99","endLine":3,"endColumn":45},{"ruleId":"101","severity":1,"message":"115","line":40,"column":8,"nodeType":"103","endLine":40,"endColumn":10,"suggestions":"116"},{"ruleId":"92","replacedBy":"117"},{"ruleId":"94","replacedBy":"118"},{"ruleId":"96","severity":1,"message":"119","line":1,"column":9,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"120","line":4,"column":7,"nodeType":"98","messageId":"99","endLine":4,"endColumn":34},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["123"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'films' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPeople'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has missing dependencies: 'getDetails' and 'person'. Either include them or remove the dependency array.",["125"],"'useSelector' is defined but never used.","'resetList' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getFilm', 'props.indexId', and 'props.url'. Either include them or remove the dependency array.",["126"],["121"],["122"],"'createAsyncThunk' is defined but never used.","'initialFilmState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [dispatch]",{"range":"135","text":"136"},"Update the dependencies array to be: [getPeople]",{"range":"137","text":"138"},"Update the dependencies array to be: [getDetails, person, person.url]",{"range":"139","text":"140"},"Update the dependencies array to be: [dispatch, getFilm, props.indexId, props.url]",{"range":"141","text":"142"},[673,675],"[dispatch]",[1154,1156],"[getPeople]",[1146,1158],"[getDetails, person, person.url]",[1170,1172],"[dispatch, getFilm, props.indexId, props.url]"]